/* esm.sh - esbuild bundle(@radix-ui/react-checkbox@1.0.4) denonext production */
/* This is creadted from './Checkbox.tsx' */
import*as e from"../../../../../../esm.sh/preact@10.19.6/compat.js";
import{createContextScope as D}from"../../../../../../esm.sh/v132/_@radix-ui/react-context@1.0.1.js";
import{composeEventHandlers as S}from"../../../../../../esm.sh/_@radix-ui/primitive@1.0.1.js";
import{useControllableState as N}from"../../../../../../esm.sh/v132/_@radix-ui/react-use-controllable-state@1.0.1.js";
import{usePrevious as B}from"../../../../../../esm.sh/v132/_@radix-ui/react-use-previous@1.0.1.js";
import{useSize as M}from"../../../../../../esm.sh/v132/_@radix-ui/react-use-size@1.0.1.js";
import{Presence as O}from"../../../../../../esm.sh/v132/_@radix-ui/react-presence@1.0.1.js";
import{Primitive as w}from"../../../../../../esm.sh/v132/_@radix-ui/react-primitive@1.0.3.js";
const x="Checkbox",[q,A]=D(x),[H,K]=q(x),y=e.forwardRef((t,m)=>{const{__scopeCheckbox:o,name:a,checked:l,defaultChecked:n,required:f,disabled:i,value:d="on",onCheckedChange:h,...P}=t,[c,k]=e.useState(null),b=e.useRef(null),C=e.useRef(!1),R=c?!!c.closest("form"):!0,[u=!1,E]=N({prop:l,defaultProp:n,onChange:h}),_=e.useRef(u);return e.useEffect(()=>{b.current&&k(b.current)},[b.current]),e.useEffect(()=>{const r=c?.form;if(r){const p=()=>E(_.current);return r.addEventListener("reset",p),()=>r.removeEventListener("reset",p)}},[c,E]),e.createElement(H,{scope:o,state:u,disabled:i},e.createElement(w.button,{type:"button",role:"checkbox","aria-checked":s(u)?"mixed":u,"aria-required":f,"data-state":g(u),"data-disabled":i?"":void 0,disabled:i,value:d,...P,ref:b,onKeyDown:S(t.onKeyDown,r=>{r.key==="Enter"&&r.preventDefault()}),onClick:S(t.onClick,r=>{E(p=>s(p)?!0:!p),R&&(C.current=r.isPropagationStopped(),C.current||r.stopPropagation())})}),R&&e.createElement(L,{control:c,bubbles:!C.current,name:a,value:d,checked:u,required:f,disabled:i,style:{transform:"translateX(-100%)"}}))});y.displayName=x;const I="CheckboxIndicator",v=e.forwardRef((t,m)=>{const{__scopeCheckbox:o,forceMount:a,...l}=t,n=K(I,o);return e.createElement(O,{present:a||s(n.state)||n.state===!0},e.createElement(w.span,{"data-state":g(n.state),"data-disabled":n.disabled?"":void 0,...l,ref:m,style:{pointerEvents:"none",...t.style}}))});v.displayName=I;const L=t=>{const{control:m,checked:o,bubbles:a=!0,...l}=t,n=e.useRef(null),f=B(o),i=M(m);return e.useEffect(()=>{const d=n.current,h=window.HTMLInputElement.prototype,c=Object.getOwnPropertyDescriptor(h,"checked").set;if(f!==o&&c){const k=new Event("click",{bubbles:a});d.indeterminate=s(o),c.call(d,s(o)?!1:o),d.dispatchEvent(k)}},[f,o,a]),e.createElement("input",{type:"checkbox","aria-hidden":!0,defaultChecked:s(o)?!1:o,...l,tabIndex:-1,ref:n,style:{...t.style,...i,position:"absolute",pointerEvents:"none",opacity:0,margin:0}})};function s(t){return t==="indeterminate"}function g(t){return s(t)?"indeterminate":t?"checked":"unchecked"}const z=y,T=v;export{A as createCheckboxScope,y as Checkbox,v as CheckboxIndicator,z as Root,T as Indicator};
